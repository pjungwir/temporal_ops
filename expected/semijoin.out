SELECT  a.id, UNNEST(multirange(a.valid_at) * j.valid_at) AS valid_at
FROM    a
JOIN (
  SELECT  b.id, range_agg(b.valid_at) AS valid_at
  FROM    b
  GROUP BY b.id
) AS j
ON a.id = j.id AND a.valid_at && j.valid_at;
 id | valid_at 
----+----------
  1 | [5,10)
  1 | [15,20)
  6 | [5,12)
  9 | [1,20)
(4 rows)

-- If it is an equijoin and the FK is on the left side
-- (thus the right side is unique),
-- we can simplify to this:
SELECT  a.id, a.valid_at * b.valid_at
FROM    a
JOIN    b
ON      a.id = b.id
AND     a.valid_at && b.valid_at
AND     NOT isempty(a.valid_at * b.valid_at)
WHERE   a.id IS DISTINCT FROM 6;
 id | ?column? 
----+----------
  1 | [5,10)
  1 | [15,20)
  9 | [1,20)
(3 rows)

SELECT	*
FROM		temporal_semijoin('a', 'id', 'valid_at', 'b', 'id', 'valid_at') AS t(id int, valid_at int4range);
 id | valid_at 
----+----------
  1 | [5,10)
  1 | [15,20)
  6 | [5,12)
  9 | [1,20)
(4 rows)

